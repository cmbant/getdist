name: Build Mac App

on:
  workflow_dispatch:
    inputs:
      skip_signing:
        description: 'Skip signing and notarization (for testing only)'
        required: false
        default: false
        type: boolean
  push:
    branches: [ main, master, mac ]
    paths:
      - 'getdist/gui/**'
      - 'scripts/build_mac_app.py'
      - 'scripts/build_mac_app.sh'
      - 'scripts/sign_mac_app.sh'
      - 'scripts/notarize_mac_app.sh'
      - 'scripts/create_mac_dmg.sh'
      - 'scripts/fix_qt_frameworks.sh'
      - 'scripts/fix_qt_bundle_ambiguity.sh'
      - '.github/workflows/build_mac_app.yml'

jobs:
  build:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        # Verify uv installation
        source "$HOME/.cargo/env"
        uv --version

    - name: Build Mac App
      run: |
        # Make the script executable
        chmod +x scripts/build_mac_app.sh
        # Show environment info
        echo "Python version:"
        python --version
        echo "uv version:"
        uv --version
        echo "Working directory:"
        pwd
        # Run the build script with verbose output
        ./scripts/build_mac_app.sh

    - name: Sign and Notarize Mac App
      if: github.event.inputs.skip_signing != 'true'
      env:
        MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
        MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
        APP_STORE_CONNECT_KEY: ${{ secrets.APP_STORE_CONNECT_KEY }}
        APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
        APP_STORE_CONNECT_API_ISSUER: ${{ secrets.APP_STORE_CONNECT_API_ISSUER }}
      run: |
        # Make the scripts executable
        chmod +x scripts/sign_mac_app.sh
        chmod +x scripts/notarize_mac_app.sh
        chmod +x scripts/create_mac_dmg.sh
        chmod +x scripts/fix_qt_frameworks.sh
        chmod +x scripts/fix_qt_bundle_ambiguity.sh

        # Sign the app (this will rename the app to replace spaces with underscores)
        echo "Signing the app..."
        ./scripts/sign_mac_app.sh "dist/GetDist GUI.app"

        # Notarize the app (use the renamed path with underscores)
        echo "Notarizing the app..."
        ./scripts/notarize_mac_app.sh "dist/GetDist_GUI.app"

        # Create DMG (use the renamed path with underscores)
        echo "Creating DMG..."
        ./scripts/create_mac_dmg.sh "dist/GetDist_GUI.app" "dist/GetDist-GUI.dmg"

    - name: Upload DMG
      uses: actions/upload-artifact@v4
      with:
        name: GetDist-GUI-DMG
        path: dist/GetDist-GUI.dmg

    - name: Create Release (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v2
      with:
        files: |
          dist/GetDist-GUI.dmg
        draft: true
        prerelease: false
